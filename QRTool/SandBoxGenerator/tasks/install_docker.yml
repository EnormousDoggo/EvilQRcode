---
- name: "Install Docker prerequisites"
  apt:
    name: "{{ docker_apt_dependencies }}"
    state: present
    update_cache: true
  tags: ["docker", "install", "packages"]

- name: "Add Docker key"
  get_url:
    url: "{{ docker_apt_repo_key_url }}"
    dest: "{{ docker_repo_key_path }}"
  tags: ["docker", "install", "packages"]

- name: "Verify ownership and rights on Docker Repo Key"
  file:
    path: "{{ docker_repo_key_path }}"
    owner: "root"
    group: "root"
    mode: "0664"
  tags: ["docker", "install", "packages"]

- name: "Get DPKG architecture"
  command: "dpkg --print-architecture"
  register: deb_arch
  changed_when: false
  check_mode: false
  tags: ["docker", "install", "packages"]

- name: "Set Docker APT repository variable"
  set_fact:
    docker_apt_repo: >-
      {% if ansible_distribution_release == "bookworm" %}
      deb [arch={{ deb_arch.stdout }} signed-by=/etc/apt/keyrings/docker.asc] {{ docker_repo_url }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}
      {% else %}
      deb [arch={{ deb_arch.stdout }}] {{ docker_repo_url }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}
      {% endif %}
  tags: ["docker", "install", "packages"]

- name: "Display Docker repository URL"
  debug: var=docker_apt_repo

- name: "Add Docker repository"
  apt_repository:
    filename: docker
    repo: "{{ docker_apt_repo }}"
    update_cache: true
    state: present
  ignore_errors: true
  tags: ["docker", "install", "packages"]

- name: "Get installed Docker version"
  command: "dpkg-query --showformat='${Version}' --show {{ docker_pkg_name }}"
  register: docker_pkg_installed_version
  failed_when: false
  changed_when: false
  check_mode: false
  tags: ["docker", "install", "packages"]

- name: "Unhold Docker version"
  dpkg_selections:
    name: "{{ docker_pkg_name }}"
    selection: install
  when: not docker_pkg_version_hold or (docker_pkg_installed_version.stdout and docker_pkg_installed_version.stdout != docker_pkg_version)
  tags: ["docker", "install", "packages"]

- name: "Install Docker Packages"
  apt:
    name: "{{ docker_pkg_name }}{% if docker_pkg_version is defined and docker_pkg_version != '' %}={{ docker_pkg_version }}{% endif %}"
    cache_valid_time: 3600
    state: present
  notify: "Restart Docker Service"
  tags: ["docker", "install", "packages"]

- name: "Hold Docker version"
  dpkg_selections:
    name: "{{ docker_pkg_name }}"
    selection: "hold"
  when: docker_pkg_version_hold
  tags: ["docker", "install", "packages"]

- name: "Start and enable Docker"
  systemd:
    name: docker
    state: started
    enabled: yes
  become: true

- name: "Check that Docker is working"
  command: docker --version
  register: docker_version
  changed_when: false

- debug:
    msg: "Docker installed : {{ docker_version.stdout }}"